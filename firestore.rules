rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Admin access to all documents
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Allow users to read their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to read charging stations and chargers
    match /charging_stations/{stationId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    match /chargers/{chargerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Allow users to read and write their own transactions
    match /transactions/{transactionId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own reservations
    // Also allow reading all reservations for availability checking
    match /reservations/{reservationId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own wallets
    match /wallets/{walletId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own vehicles
    match /vehicles/{vehicleId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read, write, and delete their own rewards
    match /rewards/{rewardId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
      allow delete: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own vouchers
    match /vouchers/{voucherId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own payment methods
    match /payment_methods/{paymentMethodId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own charging sessions
    match /charging_sessions/{sessionId} {
      allow read: if request.auth != null && 
        resource.data.user_id == request.auth.uid;
      allow write: if request.auth != null && 
        request.resource.data.user_id == request.auth.uid;
    }
    
    // Allow users to read and write their own settings
    match /user_settings/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
  }
}